name: homelab-llm-stack

services:

  nginx:
    image: docker.io/nginx:1.27.1
    container_name: homelab-nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    env_file:
      - ../base.env
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - network-reverse-proxy

  # https://github.com/ollama/ollama/blob/main/docs/docker.md
  ollama:
    build:
      context: ./ollama
      dockerfile: ./Dockerfile
    container_name: homelab-ollama
    restart: unless-stopped
    env_file:
      - ../base.env
    volumes:
      - volume-ollama:/root/.ollama
      - volume-ollama-build:/workspace
    networks:
      - network-reverse-proxy
      - network-ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]

  # https://github.com/Unstructured-IO/unstructured-api
  unstructured:
    image: downloads.unstructured.io/unstructured-io/unstructured-api:latest
    container_name: homelab-unstructured
    environment:
      - PORT=9500
    networks:
      - network-reverse-proxy

  crontab:
    build:
      context: ./crontab
      dockerfile: ./Dockerfile
    container_name: homelab-crontab
    restart: always
    env_file:
      - ../base.env
    volumes:
      - ./docs:/docs:ro
      - ./:/workspaces:cached
    networks:
      - network-reverse-proxy

  langserve:
    build:
      context: ./langserve
      dockerfile: ./Dockerfile
    container_name: homelab-langserve
    restart: always
    ports:
      - 31000:8000
    env_file:
      - ../base.env
    volumes:
      - ./docs:/docs:ro
    networks:
      - network-reverse-proxy

  # https://docs.chainlit.io/authentication/oauth#gitlab
  chainlit:
    build:
      context: ./chainlit
      dockerfile: ./Dockerfile
    container_name: homelab-chainlit
    restart: always
    environment:
      - OAUTH_GITLAB_CLIENT_ID=""
      - OAUTH_GITLAB_CLIENT_SECRET=""
      - OAUTH_GITLAB_DOMAIN=""
    env_file:
      - ../base.env
    volumes:
      - ./docs:/docs:ro
    networks:
      - network-reverse-proxy

  chroma:
    image: chromadb/chroma:0.5.11
    container_name: homelab-chroma
    restart: always
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma # this is the default path, change it as needed
      - ANONYMIZED_TELEMETRY=FALSE
    volumes:
      - volume-chroma:/chroma/chroma
    networks:
      - network-reverse-proxy

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    container_name: homelab-elasticsearch
    restart: always
    shm_size: 1g
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    volumes:
      - volume-elasticsearch:/usr/share/elasticsearch/data
    networks:
      - network-reverse-proxy

  # https://docs.gitlab.com/ee/install/docker.html
  gitlab:
    image: docker.io/gitlab/gitlab-ee:16.10.10-ee.0
    # image: docker.io/gitlab/gitlab-ee:17.4.1-ee.0
    container_name: homelab-gitlab
    restart: always
    shm_size: 256m
    ports:
      - 30022:22
    env_file:
      - ../base.env
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://localhost/gitlab'
        gitlab_rails['time_zone'] = 'Tokyo'
        gitlab_rails['gitlab_shell_ssh_port'] = 30022
    volumes:
      - /srv/gitlab/config:/etc/gitlab
      - /srv/gitlab/logs:/var/log/gitlab
      - /srv/gitlab/data:/var/opt/gitlab
    networks:
      - network-reverse-proxy

  jupyterhub:
    build:
      context: ./jupyterhub
      dockerfile: ./Dockerfile
    container_name: homelab-jupyterhub
    restart: unless-stopped
    env_file:
      - ../base.env
    environment:
      - GITLAB_HOST=${GITLAB_HOST}
      - OAUTH_CALLBACK_URL=${OAUTH_CALLBACK_URL}
      - GITLAB_CLIENT_ID=${GITLAB_CLIENT_ID}
      - GITLAB_CLIENT_SECRET=${GITLAB_CLIENT_SECRET}
    networks:
      - network-reverse-proxy
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [ gpu ]
  # nni:
  #   image: docker.io/msranni/nni:latest
  #   container_name: homelab-nni
  #   restart: unless-stopped
  #   env_file:
  #     - ../base.env
  #     - .env

  # https://docs.langflow.org/deployment-docker
  # langflow:
  #   image: docker.io/langflowai/langflow:latest
  #   container_name: homelab-langflow
  #   restart: unless-stopped
  #   ports:
  #     - 30111:7860
  #   env_file:
  #     - ../base.env
  #   environment:
  #     - LANGFLOW_DATABASE_URL=postgresql://langflow_user:langflow_pass@langflow-db:5432/langflow_base
  #     - LANGFLOW_STORE_ENVIRONMENT_VARIABLES=true
  #   volumes:
  #     - volume-langflow:/app/langflow
  #   networks:
  #     - network-langflow
  #   depends_on:
  #     - langflow-db

  # langflow-db:
  #   image: docker.io/postgres:16
  #   container_name: homelab-langflow-db
  #   restart: unless-stopped
  #   env_file:
  #     - ../base.env
  #   environment:
  #     POSTGRES_USER: langflow_user
  #     POSTGRES_PASSWORD: langflow_pass
  #     POSTGRES_DB: langflow_base
  #   volumes:
  #     - volume-langflow-db:/var/lib/postgresql/data
  #   networks:
  #     - network-langflow
  #   healthcheck:
  #     test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} || exit 1" ]
  #     interval: 10s
  #     timeout: 10s
  #     retries: 5
  #     start_period: 5s

networks:
  network-reverse-proxy:
    name: homelab-network-reverse-proxy
    # external: true
  network-ollama:
    name: homelab-network-ollama
  network-langflow:
    name: homelab-network-langflow

volumes:
  volume-ollama:
    name: homelab-volume-ollama
  volume-ollama-build:
    name: homelab-volume-ollama-build
  volume-langflow:
    name: homelab-volume-langflow
  volume-langflow-db:
    name: homelab-volume-langflow-db
  volume-chroma:
    name: homelab-volume-chroma
  volume-elasticsearch:
    name: homelab-volume-elasticsearch
